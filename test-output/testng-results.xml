<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-23T20:40:56 IST" name="Suite Name" finished-at="2024-09-23T20:41:18 IST" duration-ms="21839">
    <groups>
      <group name="Master">
        <method signature="Account_Regristraction.regristraction()[pri:0, instance:testCases.Account_Regristraction@46268f08]" name="regristraction" class="testCases.Account_Regristraction"/>
        <method signature="Login.loginToApp()[pri:0, instance:testCases.Login@39fcbef6]" name="loginToApp" class="testCases.Login"/>
      </group> <!-- Master -->
      <group name="Sanity">
        <method signature="Login.loginToApp()[pri:0, instance:testCases.Login@39fcbef6]" name="loginToApp" class="testCases.Login"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="Account_Regristraction.regristraction()[pri:0, instance:testCases.Account_Regristraction@46268f08]" name="regristraction" class="testCases.Account_Regristraction"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-09-23T20:40:56 IST" name="Test" finished-at="2024-09-23T20:41:18 IST" duration-ms="21839">
      <class name="testCases.Account_Regristraction">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.Account_Regristraction@46268f08]" started-at="2024-09-23T20:40:57 IST" name="setUp" finished-at="2024-09-23T20:41:01 IST" duration-ms="4137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="regristraction()[pri:0, instance:testCases.Account_Regristraction@46268f08]" started-at="2024-09-23T20:41:01 IST" name="regristraction" finished-at="2024-09-23T20:41:03 IST" duration-ms="2573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regristraction -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.Account_Regristraction@46268f08]" started-at="2024-09-23T20:41:03 IST" name="tearDown" finished-at="2024-09-23T20:41:04 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.Account_Regristraction -->
      <class name="testCases.Login">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.Login@39fcbef6]" started-at="2024-09-23T20:41:04 IST" name="setUp" finished-at="2024-09-23T20:41:07 IST" duration-ms="3238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginToApp()[pri:0, instance:testCases.Login@39fcbef6]" started-at="2024-09-23T20:41:07 IST" name="loginToApp" finished-at="2024-09-23T20:41:18 IST" duration-ms="11080" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1043)
at testCases.Login.loginToApp(Login.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToApp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.Login@39fcbef6]" started-at="2024-09-23T20:41:18 IST" name="tearDown" finished-at="2024-09-23T20:41:18 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.Login -->
    </test> <!-- Test -->
  </suite> <!-- Suite Name -->
</testng-results>
